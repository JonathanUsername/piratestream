"3cbd47e5d3ac6ccfc0e5154f6bbff51259a321d9"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((#("f" 0 1 (fontified t)) . -385) (385 . 386) (380 . 385)) nil (21746 1177 682027 0) 0 nil]) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -473) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -423) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -378) (undo-tree-id461 . 2) (undo-tree-id462 . 2) 471 (t 21746 1069 0 0)) nil (21746 1177 682054 0) 0 nil]) ((477 . 479) (425 . 427) (378 . 380) 417 (t 21746 980 0 0)) nil (21746 1069 642932 0) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-constant-face)) . -2000) (2000 . 2001) (1999 . 2000) (t 21746 941 0 0)) nil (21746 980 84459 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -2013) (2013 . 2014)) nil (21746 941 54602 0) 0 nil]) ((2012 . 2013)) nil (21746 941 54612 0) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -2012) (undo-tree-id338 . 1) (undo-tree-id339 . 1) (undo-tree-id340 . 1) (undo-tree-id341 . 1) (undo-tree-id342 . 1) (undo-tree-id343 . 1) (undo-tree-id344 . 1) (undo-tree-id345 . 1) (undo-tree-id346 . 1) (undo-tree-id347 . 1)) nil (21746 941 54655 0) 0 nil]) ((1991 . 1992) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1991) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . 1) (undo-tree-id353 . -1) (undo-tree-id354 . 1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . 1)) nil (21746 941 54694 0) 0 nil]) ((#("0259f6b98a7ca160a36f13457c89344c7dd34000&dn=The+Amazing+Spider-Man+2+%282014%29+1080p+BrRip+x264+-+YIFY&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Fexodus.desync.com%3A6969" 0 279 (fontified t face font-lock-string-face) 279 280 (fontified t rear-nonsticky t face font-lock-string-face)) . 2012) (undo-tree-id361 . -279) (undo-tree-id362 . -279) (undo-tree-id363 . -279) (undo-tree-id364 . -279) (undo-tree-id365 . -279) (undo-tree-id366 . -279) (undo-tree-id367 . -279) (undo-tree-id368 . -279) (undo-tree-id369 . -279) (undo-tree-id370 . -279) (undo-tree-id371 . -279) (undo-tree-id372 . -279) (undo-tree-id373 . -279) (undo-tree-id374 . -279) (undo-tree-id375 . -279) (undo-tree-id376 . -279) (undo-tree-id377 . -279) (undo-tree-id378 . -279) (undo-tree-id379 . -279) (undo-tree-id380 . -279) (undo-tree-id381 . -279) (undo-tree-id382 . -279) (undo-tree-id383 . -279) (undo-tree-id384 . -279) (undo-tree-id385 . -279) (undo-tree-id386 . -279) (undo-tree-id387 . -279) (undo-tree-id388 . -279) (undo-tree-id389 . -279) (undo-tree-id390 . -279) (undo-tree-id391 . -279) (undo-tree-id392 . -279) (undo-tree-id393 . -279) (undo-tree-id394 . -279) (undo-tree-id395 . -279) (undo-tree-id396 . -279) (undo-tree-id397 . -279) (undo-tree-id398 . -279) (undo-tree-id399 . -279) (undo-tree-id400 . -279) (undo-tree-id401 . -279) (undo-tree-id402 . -279) (undo-tree-id403 . -279) (undo-tree-id404 . -279) (undo-tree-id405 . -279) (undo-tree-id406 . -279) (undo-tree-id407 . -279) (undo-tree-id408 . -279) (undo-tree-id409 . -279) (undo-tree-id410 . -279) (undo-tree-id411 . -279) (undo-tree-id412 . -279) (undo-tree-id413 . -279) (undo-tree-id414 . -279) (undo-tree-id415 . -279) (undo-tree-id416 . -279) (undo-tree-id417 . -279) (undo-tree-id418 . -279) (undo-tree-id419 . -279) (undo-tree-id420 . -279) (undo-tree-id421 . -279) (undo-tree-id422 . -279) (undo-tree-id423 . -279) (undo-tree-id424 . -279) (undo-tree-id425 . -279) (undo-tree-id426 . -279) (undo-tree-id427 . -279) (undo-tree-id428 . -279) (undo-tree-id429 . -279) (undo-tree-id430 . -279) (undo-tree-id431 . -279) (undo-tree-id432 . -279) (undo-tree-id433 . -279) (undo-tree-id434 . -279) (undo-tree-id435 . -279) (undo-tree-id436 . -279) (undo-tree-id437 . 280) (undo-tree-id438 . -279) (undo-tree-id439 . 279) (undo-tree-id440 . -279) (undo-tree-id441 . 278) (undo-tree-id442 . -279) (undo-tree-id443 . 277) (undo-tree-id444 . -279) (undo-tree-id445 . 278) (undo-tree-id446 . -279) (undo-tree-id447 . 279) (undo-tree-id448 . -279) (undo-tree-id449 . 280) (undo-tree-id450 . -279)) nil (21746 941 54908 0) 0 nil]) ((#("f" 0 1 (fontified nil)) . -1990) (1990 . 1991)) nil (21746 941 54925 0) 0 nil]) ((1985 . 1990) (#("equal" 0 5 (fontified t)) . 1985) (undo-tree-id451 . 5) (undo-tree-id452 . 4) (undo-tree-id453 . 3) (undo-tree-id454 . 2) (undo-tree-id455 . 1) (undo-tree-id456 . 2) (undo-tree-id457 . 3) (undo-tree-id458 . 4) (undo-tree-id459 . 5) (undo-tree-id460 . 5) (t 21746 898 0 0)) nil (21746 941 54954 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2292)) nil (21746 898 537962 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2293)) nil (21746 898 537970 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2294)) nil (21746 898 537972 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2295)) nil (21746 898 537975 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2296)) nil (21746 898 537977 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2297)) nil (21746 898 537980 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2298)) nil (21746 898 537982 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2299)) nil (21746 898 537984 0) 0 nil]) ((2292 . 2300)) nil (21746 898 537986 0) 0 nil]) ((nil rear-nonsticky nil 2291 . 2292) (nil fontified nil 1992 . 2292) (1992 . 2292) (#("magnet:?xt=urn:btih:0259f6b98a7ca160a36f13457c89344c7dd34000&dn=The+Amazing+Spider-Man+2+%282014%29+1080p+BrRip+x264+-+YIFY&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A8
0&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.istole.it%3A6969&tr=udp%3A%2F%2Fopen.demonii.com%3A1337" 0 290 (fontified t face font-lock-string-face) 290 291 (fontified t rear-nonsticky t face font-lock-string-face)) . 1992) (undo-tree-id330 . -290) (undo-tree-id331 . -170) (undo-tree-id332 . 77) (undo-tree-id333 . 76) (undo-tree-id334 . 75) (undo-tree-id335 . 74) (undo-tree-id336 . 73) (undo-tree-id337 . 284) 1999 (t 21746 806 0 0)) nil (21746 898 538020 0) 0 nil]) ((nil rear-nonsticky nil 2282 . 2283) (nil fontified nil 1992 . 2283) (1992 . 2283) 1991 (t 21746 789 0 0)) nil (21746 806 490728 0) 0 nil] [nil nil ((nil rear-nonsticky nil 2292 . 2293) (nil fontified nil 1992 . 2293) (1992 . 2293) 1991) ((#("magnet:?xt=urn:btih:0259f6b98a7ca160a36f13457c89344c7dd34000&dn=The+Amazing+Spider-Man+2+%282014%29+1080p+BrRip+x264+-+YIFY&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&tr=udp
%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Fexodus.desync.com%3A6969" 0 170 (fontified nil face font-lock-string-face) 170 300 (fontified nil face font-lock-string-face) 300 301 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 1992) (undo-tree-id318 . -300) (undo-tree-id319 . -168) (undo-tree-id320 . 1) (undo-tree-id321 . 212) (undo-tree-id322 . 133) (undo-tree-id323 . -168) (undo-tree-id324 . 133) (undo-tree-id325 . -170) (undo-tree-id326 . 133) (undo-tree-id327 . 133) (undo-tree-id328 . 99) (undo-tree-id329 . 133) (nil fontified t 1992 . 2162) (nil rear-nonsticky t 2292 . 2293) (t 21746 774 0 0)) (21746 774 21824 0) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . -1992) (1992 . 1993) (#("magnet:?xt=urn:btih:0259f6b98a7ca160a36f13457c89344c7dd34000&dn=The+Amazing+Spider-Man+2+%282014%29+1080p+BrRip+x264+-+YIFY&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.istole.it%3A6969&tr=udp%3A%2F%2Fopen.demonii.com%3A1337" 0 290 (fontified t face font-lock-string-face)) . 1992) (undo-tree-id284 . -3) (undo-tree-id285 . 130) (undo-tree-id286 . 129) (undo-tree-id287 . 128) (undo-tree-id288 . 127) (undo-tree-id289 . 126) (undo-tree-id290 . 125) (undo-tree-id291 . 124) (undo-tree-id292 . 123) (undo-tree-id293 . 122) (undo-tree-id294 . 121) (undo-tree-id295 . 120) (undo-tree-id296 . 119) (undo-tree-id297 . 118) (undo-tree-id298 . 117) (undo-tree-id299 . 116) (undo-tree-id300 . 115) (undo-tree-id301 . 114) (undo-tree-id302 . 113) (undo-tree-id303 . 112) (undo-tree-id304 . 111) (undo-tree-id305 . 110) (undo-tree-id306 . 109) (undo-tree-id307 . 108) (undo-tree-id308 . 107) (undo-tree-id309 . 106) (undo-tree-id310 . 105) (undo-tree-id311 . 104) (undo-tree-id312 . 103) (undo-tree-id313 . 102) (undo-tree-id314 . 101) (undo-tree-id315 . 100) (undo-tree-id316 . 99) (undo-tree-id317 . 276) 2006 (t 21746 734 0 0)) nil (21746 787 995413 0) 0 nil]) ((#("/" 0 1 (syntax-table #1=(3) fontified t face font-lock-string-face)) . 1857) (undo-tree-id283 . 1) (t 21745 65505 0 0)) nil (21746 734 392080 0) 0 nil]) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3143) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3096) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3059) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -3011) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2960) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2919) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2853) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2792) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2741) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2695) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2645) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2594) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2546) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2503) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2378) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2327) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2288) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1954) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1904) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1863) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1785) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1741) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1707) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1651) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1595) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1547) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1500) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1446) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1389) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1345) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1313) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1246) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1196) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1157) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1113) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1071) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1038) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -956) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -908) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -863) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -817) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -769) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -728) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -633) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -593) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -549) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -512) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -469) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -419) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -374) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -281) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -237) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -204) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -176) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -125) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -110) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -92) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -52) 3255 (t 21745 65452 0 0)) nil (21745 65505 692193 0) 0 nil]) ((#("        console.log video
" 0 25 (fontified t) 25 26 (fontified t)) . 6470) (undo-tree-id277 . 2) (undo-tree-id278 . 18) 6478) nil (21745 65452 658170 0) 0 nil]) ((#("        console.log [].find
" 0 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-unmatched-face)) 21 22 (fontified t face (rainbow-delimiters-unmatched-face)) 22 23 (fontified t) 23 27 (fontified t) 27 28 (fontified t)) . 6407) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 2) (undo-tree-id282 . 2) 6433 (t 21745 65223 0 0)) nil (21745 65452 658191 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -6434) (6434 . 6435)) nil (21745 65223 693023 0) 0 nil]) ((6431 . 6434)) nil (21745 65223 693033 0) 0 nil]) ((6430 . 6431)) nil (21745 65223 693036 0) 0 nil]) ((6429 . 6430)) nil (21745 65223 693039 0) 0 nil]) ((6427 . 6429) (#("[" 0 1 (fontified nil)) . -6427) (6427 . 6428)) nil (21745 65223 693043 0) 0 nil]) ((#("a" 0 1 (fontified t)) . -6427)) nil (21745 65223 693046 0) 0 nil]) ((6427 . 6428) (#("categories" 0 10 (fontified t)) . 6427) (undo-tree-id268 . 1) (undo-tree-id269 . 6) (undo-tree-id270 . 6) (undo-tree-id271 . 6) (undo-tree-id272 . 7) (undo-tree-id273 . 8) (undo-tree-id274 . 9) (undo-tree-id275 . 10) (undo-tree-id276 . 10) (t 21745 65145 0 0)) nil (21745 65223 693092 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -6526) (6526 . 6527)) nil (21745 65145 802796 0) 0 nil]) ((6509 . 6526) (6500 . 6509) 6467 (t 21745 65090 0 0)) nil (21745 65145 802809 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -6437) (6437 . 6438)) nil (21745 65090 30179 0) 0 nil]) ((6427 . 6437) (#("ca" 0 2 (fontified t)) . -6427) (undo-tree-id267 . 2)) nil (21745 65090 30205 0) 0 nil]) ((6415 . 6429) (6406 . 6415) 6388 (t 21745 64966 0 0)) nil (21745 65090 30211 0) 0 nil]) ((3257 . 3259) (3208 . 3210) (3169 . 3171) (3119 . 3121) (3066 . 3068) (3023 . 3025) (2955 . 2957) (2892 . 2894) (2839 . 2841) (2791 . 2793) (2739 . 2741) (2686 . 2688) (2636 . 2638) (2591 . 2593) (2464 . 2466) (2411 . 2413) (2370 . 2372) (2034 . 2036) (1982 . 1984) (1939 . 1941) (1859 . 1861) (1813 . 1815) (1777 . 1779) (1719 . 1721) (1661 . 1663) (1611 . 1613) (1562 . 1564) (1506 . 1508) (1447 . 1449) (1401 . 1403) (1367 . 1369) (1298 . 1300) (1246 . 1248) (1205 . 1207) (1159 . 1161) (1115 . 1117) (1080 . 1082) (996 . 998) (946 . 948) (899 . 901) (851 . 853) (801 . 803) (758 . 760) (661 . 663) (619 . 621) (573 . 575) (534 . 536) (489 . 491) (437 . 439) (390 . 392) (295 . 297) (249 . 251) (214 . 216) (184 . 186) (131 . 133) (114 . 116) (94 . 96) (52 . 54) 3184 (t 21745 64934 0 0)) nil (21745 64966 517251 0) 0 nil]) ((#("    # it 'should find a torrent by link', ->
    #   torrent = yield scraper.getTorrent 'http://thepiratebay.se/torrent/10676856/The_Amazing_Spider-Man_2_(2014)_1080p_BrRip_x264_-_YIFY'

" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 10 (fontified t face font-lock-comment-face) 10 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-face) 34 39 (fontified t face font-lock-comment-face) 39 45 (fontified t face font-lock-comment-face) 45 49 (fontified t) 49 53 (fontified t face font-lock-comment-delimiter-face) 53 89 (fontified t face font-lock-comment-face) 89 94 (fontified t face font-lock-comment-face) 94 95 (fontified t syntax-table #1# face font-lock-comment-face) 95 96 (fontified t syntax-table #1# face font-lock-comment-face) 96 111 (fontified t face font-lock-comment-face) 111 112 (fontified t syntax-table #1# face font-lock-comment-face) 112 119 (fontified t face font-lock-comment-face) 119 120 (fontified t syntax-table #1# face font-lock-comment-face) 120 128 (fontified t face font-lock-comment-face) 128 129 (fontified t syntax-table #1# face font-lock-comment-face) 129 154 (fontified t face font-lock-comment-face) 154 155 (fontified t face font-lock-comment-face) 155 159 (fontified t face font-lock-comment-face) 159 160 (fontified t face font-lock-comment-face) 160 184 (fontified t face font-lock-comment-face) 184 186 (fontified t face font-lock-comment-face) 186 187 (fontified t)) . 174) (undo-tree-id163 . -43) (undo-tree-id164 . -187) (undo-tree-id165 . 4) (undo-tree-id166 . -89) (undo-tree-id167 . -183) (undo-tree-id168 . 4) (undo-tree-id169 . -89) (undo-tree-id170 . -89) (undo-tree-id171 . -89) (undo-tree-id172 . -187) (undo-tree-id173 . -187) (undo-tree-id174 . -187) (undo-tree-id175 . -187) (undo-tree-id176 . 1) (undo-tree-id177 . 101) (undo-tree-id178 . 146) (undo-tree-id179 . 146) (undo-tree-id180 . 101) (undo-tree-id181 . 146) (undo-tree-id182 . 146) (undo-tree-id183 . 101) (undo-tree-id184 . 1) (undo-tree-id185 . 1) (undo-tree-id186 . 101) (undo-tree-id187 . 146) (undo-tree-id188 . 146) (undo-tree-id189 . 101) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 101) (undo-tree-id193 . 146) (undo-tree-id194 . 101) (undo-tree-id195 . 1) (undo-tree-id196 . -187) (undo-tree-id197 . -187) (undo-tree-id198 . -187) (undo-tree-id199 . 1) (undo-tree-id200 . 138) (undo-tree-id201 . 138) 223) nil (21745 64934 432087 0) 0 nil]) ((#("    # it 'should find a torrent by id', ->

" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 10 (fontified t face font-lock-comment-face) 10 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-face) 34 37 (fontified t face font-lock-comment-face) 37 43 (fontified t face font-lock-comment-face) 43 44 (fontified t)) . 361) (undo-tree-id202 . 1) (undo-tree-id203 . -42) (undo-tree-id204 . -44) (undo-tree-id205 . 1) (undo-tree-id206 . -42) (undo-tree-id207 . 3) (undo-tree-id208 . 3) (undo-tree-id209 . 3) (undo-tree-id210 . 3) (undo-tree-id211 . 3) (undo-tree-id212 . 3) (undo-tree-id213 . 3) (undo-tree-id214 . 3) (undo-tree-id215 . 3) (undo-tree-id216 . 3) (undo-tree-id217 . 3) (undo-tree-id218 . 3) (undo-tree-id219 . 3) (undo-tree-id220 . 3) (undo-tree-id221 . 3) (undo-tree-id222 . 3) (undo-tree-id223 . 3) (undo-tree-id224 . 3) (undo-tree-id225 . 3) (undo-tree-id226 . 3) (undo-tree-id227 . 3) (undo-tree-id228 . 3) (undo-tree-id229 . 3) (undo-tree-id230 . 3) (undo-tree-id231 . 3) (undo-tree-id232 . 3) (undo-tree-id233 . 3) (undo-tree-id234 . 3) (undo-tree-id235 . 3) (undo-tree-id236 . 3) (undo-tree-id237 . 3) (undo-tree-id238 . 3) (undo-tree-id239 . -41) (undo-tree-id240 . 3) (undo-tree-id241 . 44) (undo-tree-id242 . 44) (undo-tree-id243 . 44) (undo-tree-id244 . 44) (undo-tree-id245 . 44) (undo-tree-id246 . 44) (undo-tree-id247 . 44) (undo-tree-id248 . 44) (undo-tree-id249 . 44) (undo-tree-id250 . 44) (undo-tree-id251 . 44) (undo-tree-id252 . -42) (undo-tree-id253 . 40) (undo-tree-id254 . 40) 365) nil (21745 64934 432262 0) 0 nil]) ((#("    # it 'should find a torrent by id when id is a number', ->
    #   torrent = yield scraper.getTorrent 10676856

" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 10 (fontified t face font-lock-comment-face) 10 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-face) 34 38 (fontified t face font-lock-comment-face) 38 42 (fontified t face font-lock-comment-face) 42 46 (fontified t face font-lock-comment-face) 46 48 (fontified t face font-lock-comment-face) 48 57 (fontified t face font-lock-comment-face) 57 63 (fontified t face font-lock-comment-face) 63 67 (fontified t) 67 71 (fontified t face font-lock-comment-delimiter-face) 71 115 (fontified t face font-lock-comment-face) 115 116 (fontified t)) . 361) (undo-tree-id255 . -116) (undo-tree-id256 . 1) (undo-tree-id257 . 12) (undo-tree-id258 . 75) (undo-tree-id259 . 75) (undo-tree-id260 . 12) (undo-tree-id261 . 75) (undo-tree-id262 . 75) (undo-tree-id263 . 75) (undo-tree-id264 . 12) (undo-tree-id265 . 75) (undo-tree-id266 . 12) 465 (t 21745 64919 0 0)) nil (21745 64934 432303 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("      console.log torrent
" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t) 6 25 (fontified t) 25 26 (fontified t)) . 173) (undo-tree-id95 . 1) (undo-tree-id96 . 1) (undo-tree-id97 . 1) (undo-tree-id98 . 1) (undo-tree-id100 . -25) (undo-tree-id102 . -25) (undo-tree-id104 . -25) (undo-tree-id106 . -25) (undo-tree-id108 . -25) (undo-tree-id110 . 18) (undo-tree-id112 . 20) 179) ((173 . 199) (t 21745 64916 0 0)) (21745 64916 270652 0) 0 nil]) ((#("      console.log torrent
" 0 25 (fontified t) 25 26 (fontified t)) . 228) (undo-tree-id113 . 1) (undo-tree-id115 . 2) (undo-tree-id117 . 2) (undo-tree-id119 . 2) (undo-tree-id121 . 20) (undo-tree-id123 . 18) 236 (t 21745 64897 0 0)) ((228 . 254)) (21745 64917 558508 0) 0 nil]) ((#("      " 0 5 (fontified nil) 5 6 (fontified nil rear-nonsticky t)) . -295) (287 . 295) 293) ((#("        " 0 8 (fontified nil)) . 287) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (295 . 301)) (21745 64917 766291 0) 0 nil]) ((nil rear-nonsticky nil 292 . 293) (nil fontified nil 287 . 293) (nil fontified nil 286 . 287) (nil fontified nil 284 . 286) (nil fontified nil 282 . 284) (nil fontified nil 281 . 282) (nil fontified nil 264 . 281) (nil fontified nil 263 . 264) (nil fontified nil 260 . 263) (#("
" 0 1 (fontified nil)) . -312) (286 . 313) 260) ((#("
      console.log torrent
" 0 1 (fontified nil) 1 6 (fontified nil) 6 7 (fontified nil rear-nonsticky nil) 7 26 (fontified nil) 26 27 (fontified nil)) . 286) (undo-tree-id126 . -26) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -26) (undo-tree-id130 . 20) (undo-tree-id131 . -26) (undo-tree-id132 . -26) (undo-tree-id133 . -26) (undo-tree-id134 . -26) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -26) (undo-tree-id138 . -26) (undo-tree-id139 . 20) (undo-tree-id140 . -26) (undo-tree-id141 . -26) (undo-tree-id142 . -27) (312 . 313) (nil fontified t 286 . 287) (nil rear-nonsticky t 292 . 293)) (21745 64917 967481 0) 0 nil]) ((nil rear-nonsticky nil 178 . 179) (nil fontified nil 173 . 179) (nil fontified nil 172 . 173) (nil fontified nil 164 . 172) (nil fontified nil 147 . 164) (#("
" 0 1 (fontified nil)) . -198) (172 . 199) 147 (t 21745 64884 0 0)) ((#("
      console.log torrent
" 0 1 (fontified nil) 1 6 (fontified nil) 6 7 (fontified nil rear-nonsticky nil) 7 26 (fontified nil) 26 27 (fontified nil)) . 172) (undo-tree-id143 . -1) (undo-tree-id144 . 20) (undo-tree-id145 . -26) (undo-tree-id146 . -27) (198 . 199) (nil fontified t 172 . 173) (nil rear-nonsticky t 178 . 179)) (21745 64917 991135 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -227) (227 . 228)) ((#("f" 0 1 (fontified nil)) . 227) (undo-tree-id147 . -1) (227 . 228)) (21745 64918 15431 0) 0 nil]) ((219 . 227)) ((#(" torrent" 0 8 (fontified t)) . 219) (undo-tree-id148 . -8) (undo-tree-id149 . 1)) (21745 64918 38830 0) 0 nil]) ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -219) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 220)) ((219 . 221)) (21745 64918 61311 0) 0 nil]) ((219 . 221) (#("(" 0 1 (fontified nil)) . -219) (208 . 220) (201 . 208) (t 21745 64866 0 0)) ((#("
      " 0 1 (fontified t) 1 7 (fontified nil)) . 201) (undo-tree-id150 . -1) (undo-tree-id151 . -7) (undo-tree-id152 . -1) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (#("console.log(" 0 11 (fontified nil) 11 12 (fontified nil)) . 208) (undo-tree-id156 . 10) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . 2) (undo-tree-id160 . -11) (undo-tree-id161 . -12) (219 . 220) (#("()" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face))) . 219) (undo-tree-id162 . 1)) (21745 64918 85873 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 174) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . -1) (undo-tree-id85 . 1) (undo-tree-id87 . 1) (undo-tree-id89 . 1) (undo-tree-id91 . 1) (undo-tree-id93 . 1) (t 21745 64865 0 0)) ((174 . 175)) (21745 64918 109550 0) 0 nil]) ((#("    # it 'should find a torrent by link', ->
    #   torrent = yield scraper.getTorrent 'http://thepiratebay.se/torrent/10676856/The_Amazing_Spider-Man_2_(2014)_1080p_BrRip_x264_-_YIFY'

    # it 'should find a torrent by id when id is a number', ->
    #   torrent = yield scraper.getTorrent 10676856

    # it 'should find a torrent by id', ->
" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 10 (fontified t face font-lock-comment-face) 10 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-face) 34 39 (fontified t face font-lock-comment-face) 39 45 (fontified t face font-lock-comment-face) 45 49 (fontified t) 49 53 (fontified t face font-lock-comment-delimiter-face) 53 89 (fontified t face font-lock-comment-face) 89 94 (fontified t face font-lock-comment-face) 94 95 (syntax-table #1# fontified t face font-lock-comment-face) 95 96 (syntax-table #1# fontified t face font-lock-comment-face) 96 111 (fontified t face font-lock-comment-face) 111 112 (syntax-table #1# fontified t face font-lock-comment-face) 112 119 (fontified t face font-lock-comment-face) 119 120 (syntax-table #1# fontified t face font-lock-comment-face) 120 128 (fontified t face font-lock-comment-face) 128 129 (syntax-table #1# fontified t face font-lock-comment-face) 129 154 (fontified t face font-lock-comment-face) 154 155 (fontified t face font-lock-comment-face) 155 159 (fontified t face font-lock-comment-face) 159 160 (fontified t face font-lock-comment-face) 160 184 (fontified t face font-lock-comment-face) 184 186 (fontified t face font-lock-comment-face) 186 191 (fontified t) 191 193 (fontified t face font-lock-comment-delimiter-face) 193 197 (fontified t face font-lock-comment-face) 197 219 (fontified t face font-lock-comment-face) 219 221 (fontified t face font-lock-comment-face) 221 225 (fontified t face font-lock-comment-face) 225 229 (fontified t face font-lock-comment-face) 229 233 (fontified t face font-lock-comment-face) 233 235 (fontified t face font-lock-comment-face) 235 244 (fontified t face font-lock-comment-face) 244 250 (fontified t face font-lock-comment-face) 250 254 (fontified t) 254 258 (fontified t face font-lock-comment-delimiter-face) 258 302 (fontified t face font-lock-comment-face) 302 307 (fontified t) 307 309 (fontified t face font-lock-comment-delimiter-face) 309 313 (fontified t face font-lock-comment-face) 313 335 (fontified t face font-lock-comment-face) 335 337 (fontified t face font-lock-comment-face) 337 340 (fontified t face font-lock-comment-face) 340 346 (fontified t face font-lock-comment-face)) . 174) (undo-tree-id53 . -345) (undo-tree-id54 . -43) (undo-tree-id55 . -345) (undo-tree-id56 . 163) (undo-tree-id57 . -89) (undo-tree-id58 . -183) (undo-tree-id59 . 163) (undo-tree-id60 . -89) (undo-tree-id61 . -89) (undo-tree-id62 . -89) (undo-tree-id64 . -43) (undo-tree-id65 . -345) (undo-tree-id67 . -43) (undo-tree-id69 . -43) (undo-tree-id71 . -43) (undo-tree-id73 . -43) (undo-tree-id75 . -43) (undo-tree-id77 . -43) (undo-tree-id79 . -43) 519 (t 21745 64858 0 0)) ((174 . 520)) (21745 64918 132855 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("f" 0 1 (fontified t)) . -174) (174 . 175)) ((#("f" 0 1 (fontified nil)) . 174) (undo-tree-id1 . -1) (174 . 175) (t 21745 64836 0 0)) (21745 64836 259067 0) 0 nil]) ((173 . 174)) ((#("'" 0 1 (fontified t face font-lock-string-face)) . 173) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . -1) (undo-tree-id8 . 1)) (21745 64845 560073 0) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -165)) ((165 . 166)) (21745 64845 938460 0) 0 nil]) ((164 . 166) (#("'" 0 1 (fontified nil)) . -164) (164 . 165)) ((#("'" 0 1 (fontified nil)) . 164) (undo-tree-id9 . -1) (164 . 165) (#("''" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 164)) (21745 64846 298471 0) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -164) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 165) (164 . 166) (#("\"" 0 1 (fontified nil)) . -164) (164 . 165) (t 21745 64802 0 0)) ((#("\"" 0 1 (fontified nil)) . 164) (undo-tree-id10 . -1) (164 . 165) (#("\"\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 164) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -2) (164 . 166)) (21745 64846 730676 0) 0 nil]) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -654) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -610) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -577) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -549) 658 (t 21745 64768 0 0)) ((549 . 551) (577 . 579) (610 . 612) (654 . 656)) (21745 64847 66994 0) 0 nil]) ((9891 . 9893) (9854 . 9856) (9795 . 9797) (9757 . 9759) (9697 . 9699) (9658 . 9660) (9629 . 9631) (9580 . 9582) (9530 . 9532) (9481 . 9483) (9436 . 9438) (9399 . 9401) (9370 . 9372) (9335 . 9337) (9286 . 9288) (9239 . 9241) (9222 . 9224) (9203 . 9205) (9162 . 9164) (9107 . 9109) (9060 . 9062) (8999 . 9001) (8951 . 8953) (8910 . 8912) (8864 . 8866) (8829 . 8831) (8782 . 8784) (8745 . 8747) (8715 . 8717) (8679 . 8681) (8641 . 8643) (8598 . 8600) (8581 . 8583) (8561 . 8563) (8524 . 8526) (8456 . 8458) (8419 . 8421) (8374 . 8376) (8338 . 8340) (8302 . 8304) (8236 . 8238) (8186 . 8188) (8169 . 8171) (8149 . 8151) (8105 . 8107) (8038 . 8040) (7979 . 7981) (7906 . 7908) (7871 . 7873) (7835 . 7837) (7756 . 7758) (7705 . 7707) (7688 . 7690) (7668 . 7670) (7612 . 7614) (7562 . 7564) (7510 . 7512) (7453 . 7455) (7415 . 7417) (7366 . 7368) (7316 . 7318) (7259 . 7261) (7222 . 7224) (7186 . 7188) (7128 . 7130) (7067 . 7069) (7019 . 7021) (6977 . 6979) (6912 . 6914) (6874 . 6876) (6825 . 6827) (6773 . 6775) (6737 . 6739) (6689 . 6691) (6639 . 6641) (6604 . 6606) (6573 . 6575) (6534 . 6536) (6482 . 6484) (6430 . 6432) (6413 . 6415) (6390 . 6392) (6346 . 6348) (6274 . 6276) (6208 . 6210) (6152 . 6154) (6109 . 6111) (6054 . 6056) (5998 . 6000) (5945 . 5947) (5905 . 5907) (5772 . 5774) (5648 . 5650) (5592 . 5594) (5551 . 5553) (5488 . 5490) (5408 . 5410) (5353 . 5355) (5310 . 5312) (5225 . 5227) (5111 . 5113) (5062 . 5064) (5026 . 5028) (4965 . 4967) (4904 . 4906) (4851 . 4853) (4799 . 4801) (4743 . 4745) (4681 . 4683) (4667 . 4669) (4643 . 4645) (4621 . 4623) (4597 . 4599) (4572 . 4574) (4558 . 4560) (4509 . 4511) (4475 . 4477) (4356 . 4358) (4342 . 4344) (4318 . 4320) (4293 . 4295) (4268 . 4270) (4243 . 4245) (4218 . 4220) (4193 . 4195) (4179 . 4181) (4124 . 4126) (4083 . 4085) (4024 . 4026) (3975 . 3977) (3940 . 3942) (3904 . 3906) (3867 . 3869) (3811 . 3813) (3753 . 3755) (3736 . 3738) (3716 . 3718) (3669 . 3671) (3622 . 3624) (3573 . 3575) (3534 . 3536) (3484 . 3486) (3431 . 3433) (3388 . 3390) (3320 . 3322) (3257 . 3259) (3204 . 3206) (3156 . 3158) (3104 . 3106) (3051 . 3053) (3001 . 3003) (2956 . 2958) (2829 . 2831) (2776 . 2778) (2735 . 2737) (2399 . 2401) (2347 . 2349) (2304 . 2306) (2224 . 2226) (2178 . 2180) (2142 . 2144) (2084 . 2086) (2026 . 2028) (1976 . 1978) (1927 . 1929) (1871 . 1873) (1812 . 1814) (1766 . 1768) (1732 . 1734) (1663 . 1665) (1611 . 1613) (1570 . 1572) (1524 . 1526) (1480 . 1482) (1445 . 1447) (1361 . 1363) (1311 . 1313) (1264 . 1266) (1216 . 1218) (1166 . 1168) (1123 . 1125) (1026 . 1028) (984 . 986) (938 . 940) (899 . 901) (854 . 856) (802 . 804) (755 . 757) (660 . 662) (614 . 616) (579 . 581) (549 . 551) 547 (t 21745 64682 0 0)) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 549) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 579) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 614) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 660) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 755) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 802) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 854) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 899) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 938) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 984) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1026) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1123) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1166) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1216) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1264) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1311) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1361) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1445) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1480) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1524) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1570) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1611) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1663) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1732) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1766) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1812) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1871) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1927) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1976) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 2026) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 2084) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 2142) ("# " . 2178) ("# " . 2224) ("# " . 2304) ("# " . 2347) ("# " . 2399) ("# " . 2735) ("# " . 2776) ("# " . 2829) ("# " . 2956) ("# " . 3001) ("# " . 3051) ("# " . 3104) ("# " . 3156) ("# " . 3204) ("# " . 3257) ("# " . 3320) ("# " . 3388) ("# " . 3431) ("# " . 3484) ("# " . 3534) ("# " . 3573) ("# " . 3622) ("# " . 3669) ("# " . 3716) ("# " . 3736) ("# " . 3753) ("# " . 3811) ("# " . 3867) ("# " . 3904) ("# " . 3940) ("# " . 3975) ("# " . 4024) ("# " . 4083) ("# " . 4124) ("# " . 4179) ("# " . 4193) ("# " . 4218) ("# " . 4243) ("# " . 4268) ("# " . 4293) ("# " . 4318) ("# " . 4342) ("# " . 4356) ("# " . 4475) ("# " . 4509) ("# " . 4558) ("# " . 4572) ("# " . 4597) ("# " . 4621) ("# " . 4643) ("# " . 4667) ("# " . 4681) ("# " . 4743) ("# " . 4799) ("# " . 4851) ("# " . 4904) ("# " . 4965) ("# " . 5026) ("# " . 5062) ("# " . 5111) ("# " . 5225) ("# " . 5310) ("# " . 5353) ("# " . 5408) ("# " . 5488) ("# " . 5551) ("# " . 5592) ("# " . 5648) ("# " . 5772) ("# " . 5905) ("# " . 5945) ("# " . 5998) ("# " . 6054) ("# " . 6109) ("# " . 6152) ("# " . 6208) ("# " . 6274) ("# " . 6346) ("# " . 6390) ("# " . 6413) ("# " . 6430) ("# " . 6482) ("# " . 6534) ("# " . 6573) ("# " . 6604) ("# " . 6639) ("# " . 6689) ("# " . 6737) ("# " . 6773) ("# " . 6825) ("# " . 6874) ("# " . 6912) ("# " . 6977) ("# " . 7019) ("# " . 7067) ("# " . 7128) ("# " . 7186) ("# " . 7222) ("# " . 7259) ("# " . 7316) ("# " . 7366) ("# " . 7415) ("# " . 7453) ("# " . 7510) ("# " . 7562) ("# " . 7612) ("# " . 7668) ("# " . 7688) ("# " . 7705) ("# " . 7756) ("# " . 7835) ("# " . 7871) ("# " . 7906) ("# " . 7979) ("# " . 8038) ("# " . 8105) ("# " . 8149) ("# " . 8169) ("# " . 8186) ("# " . 8236) ("# " . 8302) ("# " . 8338) ("# " . 8374) ("# " . 8419) ("# " . 8456) ("# " . 8524) ("# " . 8561) ("# " . 8581) ("# " . 8598) ("# " . 8641) ("# " . 8679) ("# " . 8715) ("# " . 8745) ("# " . 8782) ("# " . 8829) ("# " . 8864) ("# " . 8910) ("# " . 8951) ("# " . 8999) ("# " . 9060) ("# " . 9107) ("# " . 9162) ("# " . 9203) ("# " . 9222) ("# " . 9239) ("# " . 9286) ("# " . 9335) ("# " . 9370) ("# " . 9399) ("# " . 9436) ("# " . 9481) ("# " . 9530) ("# " . 9580) ("# " . 9629) ("# " . 9658) ("# " . 9697) ("# " . 9757) ("# " . 9795) ("# " . 9854) ("# " . 9891)) (21745 64847 458807 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -198) (198 . 199)) ((#("f" 0 1 (fontified nil)) . 198) (undo-tree-id14 . -1) (198 . 199)) (21745 64848 753357 0) 0 nil]) ((191 . 198) (#("torre" 0 5 (fontified t)) . -191)) ((191 . 196) (#("torrent" 0 7 (fontified t)) . 191) (undo-tree-id15 . 1) (undo-tree-id16 . -7) (undo-tree-id17 . 1)) (21745 64849 874478 0) 0 nil]) ((182 . 196)) ((#("sole.log torre" 0 9 (fontified t) 9 14 (fontified t)) . 182) (undo-tree-id18 . -9) (undo-tree-id19 . -14) (undo-tree-id20 . 1)) (21745 64851 338471 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -182)) ((182 . 183)) (21745 64851 722144 0) 0 nil]) ((#("l" 0 1 (fontified t)) . -183)) ((183 . 184)) (21745 64852 178233 0) 0 nil]) ((179 . 184) (172 . 179) 171 (t 21488 49307 0 0)) ((#("
      " 0 1 (fontified t) 1 7 (fontified nil)) . 172) (undo-tree-id21 . 7) (undo-tree-id22 . 6) (undo-tree-id23 . 2) (undo-tree-id24 . 7) (undo-tree-id25 . 6) (undo-tree-id26 . 7) (undo-tree-id27 . 7) (undo-tree-id28 . 7) (undo-tree-id29 . 7) (undo-tree-id30 . 7) (undo-tree-id31 . 7) (undo-tree-id32 . 7) (undo-tree-id33 . 7) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -7) (undo-tree-id37 . -1) (undo-tree-id38 . -7) (undo-tree-id39 . -1) (undo-tree-id40 . -7) (undo-tree-id41 . -1) (undo-tree-id42 . -7) (undo-tree-id43 . -1) (undo-tree-id44 . -7) (#("consl" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 179) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . 3) (undo-tree-id49 . -4) (undo-tree-id50 . 2) (undo-tree-id51 . -5) (undo-tree-id52 . 1)) (21745 64852 529575 0) 0 nil]) nil nil (21745 64918 156918 0) 0 nil] #2# 12002 68 nil]